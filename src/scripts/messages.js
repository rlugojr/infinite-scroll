var NUM_AVATARS = 4;
var NUM_IMAGES = 77;
var MESSAGES = ["Anyone know how to accurately convert a float64 into a duration of minutes? Seems to keep rounding down to the closest minute: http://play.golang.org/p/sowTkxtHCf","danhardman: u will probably have to do it manually","_jd, That's annoying considering how time.Since(foo).Minutes() gives such an accurate representation. I'll see how they do it there","danhardman: well time.Duration is int64","_jd: https://golang.org/src/time/time.go?s=18025:180...","_jd, Huh... I'll play around with it.","danhardman: plus they store nanoseconds in the duration","_jd, Any idea how I would do it manually then?","danhardman: if u need second/minute precision, convert ur minutes to seconds and do the math","so time.Duration([seconds]) instead of minutes","Thanks","or if u want to use their utility, convert ur float minutes to nanoseconds, wrap it in duration and call Minutes()","_jd, Seconds works fine. Just get the duration through seconds and do .Minutes()","Thanks!","something bad happened O.O","\"fatal error: runtime: split stack overflow\"","==88680==ERROR: ThreadSanitizer failed to allocate 0x000060680000 (1617428480) bytes at 0x04037e300000 (error code: 1455)","Term1nal: cgo?","not that I am aware of.","can u show code?","only lib I'm imprting is logrus","importing*","I honestly don't know where I'd share any code. The stacktrace is in deep in the runtime.","Term1nal: did u check this one https://github.com/golang/go/issues/9358?","which version of go?","1.6","https://ghostbin.com/paste/2f4f6","this is ur local machine or a server?","I think maybe it has something to do with race detector?","I built with -race","why did u build with race detector? for testing purpose?","http://play.golang.org/p/IqYfSIYf5r","this is just a guess, but u might be having a race in ur code","well, I did find a race in detector","I plopped in a lock","well get rid of race and try again :)","race didn't trigger again, and the condition didn't come up after","this was at random not near the race.","Thiw as not mmap thread race","it was stack grow","split stack grow","yes, I see that it's a different reason","found it","suddenly started allocating infinite memory","woopsie..............","did u find the cause?","yeah, I recreated the condition again and memory started slurping up -real- fast.","I have 32 gigs on thsi machine","it was going about 4% per second","literally ran out of RAM lol that's why it appeared random","so it's a race?","no","infinite loop allocation","oh","I derp'd basically","but isn't windows suppose to start paging","if I'm not mistaken, linux will start using swap...","I turned off my pagefile","that explains it","I have an SSD and 32gigs of RAM. Don't need it :P","I did not increment the counter I was using to limit the loop :P","can u try to enable pagefile and see if this is going to happen?","I'm curious :)","I'd have to reboot because Windows","and I'm too lazy :P","vm?","I'm really surprised, however.","at how fast this thing managed to consume all of my RAM","like... dang.","https://ghostbin.com/paste/bcjjx","That's the loop. Notice the inconspicuously lacking processed++","http://play.golang.org/p/JgC_X4YtYf","Why does it’s not marshal the json properly (i want it to be: `{“os”:”ios”}`","AlmogBaku: http://play.golang.org/p/LpJaePtsHn","in other words u were satisfying interface on a pointer, but that won't satisfy interface on actual value","not sure what caused it,,,","why does it shows now?","func (o MobileOS) MarshalJSON() ([]byte, error) {","vs func (o *MobileOS) MarshalJSON() ([]byte, error) {","oh","why does using it with the reference doesnt work?","13:53 < _jd> in other words u were satisfying interface on a pointer, but that won't satisfy interface on actual value","ok","I think i understood.. thanks :)","there we go.... :D https://ghostbin.com/paste/bcjjx","removed the first loop all together and combined it into one. Realized that I was overcomplicating things.","AlmogBaku: http://play.golang.org/p/bu8z2Mv8cj","thnx","\"concurrency and parallelism are not mutually exclusive\" am I the only one thinking that these makes no sense...","s/these makes/these type of comparisons make","hey ppl. can i force to marshal []byte in json to string? i know, it gets to base64..","i hava found the \"alias\" technic (http://choly.ca/post/go-json-marshalling/) but, do i need to do that to all the structs, or is there a better way?","Hello, what are some interesting foss go projects that are open to new contributors?","_jd, you can have abstractions allowing for code to be executed concurrently. Like threads. And said threads can be executed by one CPU core with some kind of scheduler switching between threads, or they can be executed in parallel on a several CPU cores (in this case you get parallelism)","silver: yes I know that","but I wonder why do people tend to put these two things together","so concurrency is an idea to structure code, and parallelism is an idea to execute code, and therefore they're indeed not mutually exclusive","yes, exactly my point","I'm not saying that it's false","I would guess because concurrency allows for \"easy\" parallelism, you just take threads and execute them on different cores (you need to account for shared state though and all that)","this part is nicely abstracted in go","u worry about structuring, not about execution :)","so people sometimes think of those two things as one, and pioneers of SMP were careful enough to write out the distinction in their books","so it might seem a bit stange for those who do know the difference before reading a book with said explanation","hmm good point","Hey, first time joining the IRC channel so just want to make sure, is it allowed to ask questions here that is not strictly related to golang?","I am trying to implement a Kademlia DHT in golang, but I cannot seem to understand the wording of the part that deals with node lookup in any of the documents on it","damnit, I thought I clicked gonads","if I have a `http.Response` object.. how can i write it to a `ResponseWriter`","if I have a `http.Response` object.. how can i write it to a `ResponseWriter`?","AlmogBaku You should really start to read some docs: https://golang.org/pkg/net/http/#Response.Write","http://i.imgur.com/bcBXUsF.jpg ","andlabs roflmao","kurushiyama i read it of course","andlabs Just found the audioplay","but the problem is Response.Write writes to io.writer","AlmogBaku So...","Tv` amde that image","and a few others","and responsewriter's Write() only write the body","AlmogBaku: I don't u understand how writers work","what?","a writer is something you can write data to","exactly what that means is up to the individual type","the most simple writer is the devnull writer (in ioutil) that simply discards everything you write to it","AlmogBaku for a reponse r and a response writer w, it should be as easy as r.Write(w). If no headers are written, they are lacking in r.","yeha, but the `write()` method of `Response.Writer` only write the response's payload!","writing to an *os.File overwrites or appends to the contents of that file","not the headers","check the Response docs","the first call to Write() on the responsewriter writes the headers","implicitly","i know!","so unless you call something like http.Error() you get a default 200","but thats not what the \"responsewriter\" aceept!","it'll just put it on the payload","uh","are you looking at http or net","http","https://golang.org/pkg/net/http/#ResponseWriter","everything you need to know are in the comments","read it alrdy......","the Header() method gives you access to the header","not clear if its only the payload or the whole connection","you can alter it from there","then you can call WriteHeader() to write it out","AlmogBaku http://play.golang.org/p/ZtdamV1qU1","if you call Write() without calling WriteHeader() then WriteHeader() will be called for you","yeha but thats means that i need to iterate over it and copy it to the writer","so you only write the payload to Write()","iterate over what","headers","are you writinga  proxy","nevermind","ill just write directly to \"responseWriter\"","this looks like xyproblem","it is","since we clearly explained out it worked multiple times","yes, if you want to copy headrs you must iterate over them","look at the definition fo http.Header","https://golang.org/pkg/net/http/#Header","or source code of the net/http proxy","if you are trying to write a proxy","net/http has one already","use it","kurushiyama: what problem","i dont trying to write a proxy","i just wanted that my method will return an http.response object, and my \"transporter\" will send it to the connection","i wished to write something clean","but iterating over all the headers is just useless","what \"transporter\" are you trying to write?","i'll return a customResponse type, and will send it to the responsewriter in the transporter","when you use net/http handlers, net/http itself takes care of transmitting the responses","then your transporter will be the handler","https://github.com/go-kit/kit","you take the customResponse and then copy it over to a http.ResponseWriter","gokit transporter","*the","andlabs yeha","AlmogBaku It might be a stupid idea, but couldn't you take the incoming request, execute a Client.Do with it and use the returned response object to write to the response writer? Adding some headers, like X-Forwarded-For and alike should not be too complicated.","kurushiyama thats what i thought also","AlmogBaku I fail to see any problem so far, much less the need for iteration. or sth.","but i expected that http.response would have some built-in mechanism to write into responsewriter out-of-the-box","its not a problem.. i just expected something like this will be exists","AlmogBaku it does. r.Write?","r.write to what?","wr.write doesnt write the headers!","AlmogBaku http://play.golang.org/p/ZtdamV1qU1","?","again... the problem is with responsewriter.write()","AlmogBaku Maybe you want use your response writer as a param to response.Write? Just an idea. May even work.","how can I pack structs in golang?","define \"pack\"","Sorry I mean having packed structures","for interop with c stuff","http://stackoverflow.com/questions/6672205/pack...","Oh ok thanks","ciao","hi there. I have been using this very good TUN/TAP package: https://github.com/songgao/water however it doesn't seem possible to open/use an existing TAP interface with it","as anybody done that with Go? I know it's possible via C, so maybe it's just a matter of patching up that package","gdm85: I see a couple libraries on godoc when searching for TUN","Good luck!","Could someone help me running go test when cross compiling? I'm on OS X trying to run tests on a cross compiled app for linux/arm","http://grokbase.com/t/gg/golang-nuts/158enxh5ez...","Getting the same issue as there. The answer says use ./make.bash but I'm not sure what that is or how to use it","./make.bash is another file in the same directory as ./all.bash","it's the same as ./all.bash but it doesn't run the tests","since you can't run the tests when cross-compiling =P","also, none of that is necessary with new Go","I'm still not sure what the rules fro cross-compiling with new Go are","Didn't think it was Tv` ...","doesn't cgo still need a special build??","the compiler supports all platforms always; stdlib will be built on demand","andlabs: any use of cgo needs a C cross-compiler, which most people don't have","Basically my code uses the syscall package for use on linux (Raspberry Pi GPIO shit) and I'd like to test the app on my mac","as a native mac binary?","if you'r edoing gipo stuff with package syscall you can't do that with one codebase","you will need to fake the GPIO stuff in a dedicated xxx_darwin.go file","I'm not testing that part of the code so don't need to worry about that, I just need to get SOME tests working on the application to pretend I wrote tests for everything","sudo GOPATH=~/Code/go GOOS=linux GOARCH=arm go test","you'll still need to separate the package syscall stuff into an OS-specific file because package syscall differs widlly across OSs","why do you need sudo?!","andlabs, I think when I was cross compiling earlier, the build was failing because it didn't have permissions to create go/bin/linux_arm or something","So instead of actually fixing it and finding out what the problem, sudo worked... Non issue at the moment","The application works, I just need to get some tests running on it","erm","where did you instlal go","Wherever the default is on osx","how did you install go","go installer","/usr/local/go","great, so the go team themselves are doing it now too...","Doing what?","go installations in /usr via package managers have caused nothing but headaches on linux","I'm sure htere will be a go bottle if I look :v","yes there is",":L","--without-race","Build without race detector","uhh","you could disable that?...","building and installing the app works fine, it's just go test that's throwing a fit.","Still use that flag?","no don't use that flag","that was a side comment","someone else will need to continue helping, sorry","No worries","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","we got it","http://adfoc.us/2542957954871","http://adfoc.us/2542957954871","https://godoc.org/?q=imap which one is the best? I genuinely cannot tell","if I have multiple goroutines writing to the main routine's stdout, it's possible that the messages from the goroutines could get mixed in with one another, correct?","if that's the case, would you do some kind of mutex for writing to stdout?","or would you do that with a channel","s/main routine's stdout/the process' stdout/","moo!","renlo: yes, N goroutines writing to the same thing means messages can get garbled. you can use `log`, since (iirc) it's safe for concurrent use, or just a mutex.","(web backend) In Go is there a way to get the 'id' of the form that generated the event POST example: <form id=\"something_here\" method=\"post\"> ... I want to get \"something_here\"","thanks !","dyreshark: would you ever use a channel for this?","renlo: you could if you wanted to, but i don't see much of a point in having a single goroutine just push messages to stdout.","ok, thanks","acidfoo_: golang doesn't have access to that data.","the id of the form is not passed in the Request ?","or maybe the name of the button pressed ?","correct.","good !","I will use the name of the button","name=\"something\" value=\"1\"","that will do I guess","You could hijack the submit but that information is not transmitted by default, because it's not something the server really cares about","ok","hm","using that go-imap one","connect to iCloud, send a noop","get imap.ErrExclusive","anyone know what's up?","foo.(string) is only assertion, no conversion happens, right","it seems to always panic when the underlying type of foo is not a string","j416: r, ok := foo.(string)","_jd: ooh, so it returns the embedded value as a string there, I see","interesting","return value overloading","thanks _jd.","not really","“comma ok” idiom","same thing can be applied for getting a value from map","if not overloading, how does it determine that the second value is not read?","no I meant it's called comma ok idiom...","sure, but it's overloaded, right","well yea, there are two funcs in the runtime, but I didn't check how it's implemented","nod","because it's impossible to mimic that same behaviour, right?","https://golang.org/src/runtime/hashmap.go, mapaccess1 and mapacces2...","right. internal magic","I'm curious now I will try to find in the runtime :)",":)","I'm guessing it's compile-time magic","yes, probably","I don't see how else they could be able to do it","... oh I need to acknowledge the response from the server :|","_jd: thanks","j416: and by the way runtime will call one of these two functions depending on the code","so definitely compile time magic","right","not really magic; it's obvious from the AST","I stand corrected. I should of said \"magic\" :)","tuturu","[14:59:07]  <@Rakka>pgandlabs » IMAP is a strange protocol (Apr 3 2016, 6:55 PM UTC · via Twitter Web Client) https://twitter.com/pgandlabs/status/7167006700...","the protocol itself ain't that bad, but the mailbox semantics are frustrating","e.g. there is nothing in the concept of email that requires more than eventual consistency, but you can't build a multi-server HA imap server without something like paxos or raft","Tv`: the email server I use for junk mail but used to use regularly does not recognize the IMAP macros","(ALL FAST and FULL)","andlabs: i have fought with imap enough (including admining multi-thousand user setups) that my personal mail is just a git repo ;)","Tv`: heh =p","Tv`: writing a quick and dirty program to dump all attachments from all emails","so I don't have to deal with webmail's stupid search :v","the mxn imap package (that seems to be the only one around; the others are all forks of it) is a thin wrapper around the bare protocol, unlike net/http which abstracts all that away","right down to the odd synchronization methods","panic: unexpected EOF","panic: imap: exclusive client access violation","er mxk","Hey is sending a value into a channel blocking?","if the channel is unbuffered or if its buffer is full, yes","Oh. I see. So a buffered channel would not be?","for an unbuffered channel the send will finish when something receives it","for a buffered channel the send will finish when there is enough room in the buffer to store the value","Oh. Gotcha. thanks!","a buffered channel is a fixed-size FIFO","there are legitimate uses for it","but don't use it just because it doesn't block","andlabs: I am adding to the channel in a different goroutine now. I also added some buffering to help it though","what kind of thing ar eyou trying to make concurrent??","-?","I am sending indexes for tcp connections that I need to remove.","from a list","*slice","hm","but I need to remove them after the current for loop","Hey ya'll, I'm trying to serialize some xml and im running into an issue where it keeps capitalizing the first letter of a field even though i tell it not to","https://play.golang.org/p/vRH034D9i4","am I missing something here?","the original go spew package was by davecgh, right?","elgruntox: your annotation for Params looks wonky","that being said, I have yet to battle xml from go yet","boingolov: ya ive been playing around with it","it doesnt even show up if i remove the >params","the params xml tag doesn't look wonky","oh ok, got it working","what did you change","params>param","https://play.golang.org/p/_1HY13HGAq","oh","so yeah","the original go spew package was by davecgh, right?","elgruntox:  https://play.golang.org/p/ySO9yIpv32","oh, heh","I'll just assume it is","elgruntox: looks like we arrived there slightly different ways, but that works","Hey, how do I get all the available output in the StdoutPipe() of os/exec? I can read, but this waits until the data is there. I just want everything that has been written already.","hm","is ther esomething even more rigorous than gospew?","it doesn't expand named types or name the actual types of interface{} objects","is there a canonical way or example in go for \"here's how to do 2 different things at once\" - e.g. say I want to fetch a user from the users table and a message from the messages table. it feels like the channels examples I’ve seen either compose multiple stages which I don't need, or call the same channel twice. It also feels a little heavy weight for","sending a single message","It also seems like i’d need four channels, one for the user, one for the message, one each for error handling","this is the JS equivalent https://gist.github.com/kevinburke/82254f201e4b...","aha! github.com/pbberlin/tools/stringspb.IndentedDump","...which does not dump the hwole map","boo.","...","RFC822.HEADER *imap.literal","oh come on","that's why gospew didn't touch it","screw you","when i request /foo/../bar from a golang http server it reaches my handle function as /foo/bar -- is this configurable if i want to retain the '..'?","Falun: why do you want to retain the ..?","well, i guess it's the servemux that's sanitizing it","actually most browsers do these days","nhooyr: i just do; it'd take too much effort to explain","but im sure that http.server would sanitize it too","short answer: can't be done","bleh; thanks","Falun: https://tools.ietf.org/html/rfc3986#section-6.2...","comes down to, any browser sending a request for foo/../bar is broken","hm","if an email is not Content-Type: multipart/*, is it guaranteed to not have an attachment?","http://serverfault.com/a/443354/289614 is the only thing I found on the subject of how to check for multipart messages in code","everything else talks about PHP which has magic :(","andlabs: programming by stackoverflow finds mostly PHP examples, eh? who woulda thunk","programming by google","it just so happens stackoverflow is the new expertsexchange","but yeah","is the Content-Type not beginning with multipart/ sufficient to determine that an email ABSOLUTELY does not have an attachment?","I use the template system, and I usually do {{ .xsrfdata }}, but at one point I need to do {{ range $val, $key := .var }}  [...] {{ .xsrfdata }} [...] {{ end }} --- as you can imagine it says that .xsrfdata is not a member...","how can I go around it ? thanks","acidfoo_: $.xsrfdata or assign it to a var","and if so, after a mime.ParseMediaType(), is a strings.HasPrefix() sufficient to test that?","Tv`, awesome, thanks :)","Tv`, is there somewhere in the documentation I could find that ?","text/template","andlabs: is there a well regarded library from another language that you could dissect?","I mean, i'd like to read about why does adding the $ change the behavior","andlabs As long as the email system adheres to  standards, yes. Otherwise data would be inlined in the body, encoded in some form or the other.","acidfoo_: read what $ means","ok good!","andlabs Which, on the other hand means that you can not extract the payload easily, anyway.","yeah =p","thanks","which standard do you refer to?","00000000  52 65 74 75 72 6e 2d 70  61 74 68 3a 20 3c 63 6f  |Return-path: <co|","00000010  6d 6d 75 6e 69 63 61 74  69 6f 6e 73 5f 6d 73 6e  |mmunications_msn|","...this isn't mime/multipart is it","huh it is","okay then","andlabs 2045, to start with ;)","is it possible to modify a struct tag at runtime?","Email, the nightmare frontier","https://gist.github.com/kevinburke/420afcc1cb11...","is that the simplest that code can get? it seems like a lot of boilerplate just to do two things concurrently and compare the results","why are those different types?","kevinburke: i think there's a lot that could be trimmed down there","mohae: that was the simplest example I could think of that I could get running; if it makes more sense, swap out the IP addresses for a DB query to get a user and a DB query to get a message, or something","where the types would be different","kurushiyama: ok","so you want to end up comparing the results of different types?","or, http requests to your fraud server, to figure out where to route a request, and to a billing API to fetch credits, or something","yes","<- is confused; walks away","basically, “do two or three things simultaneously and interact with the results\"","well that design isn't very good","where a task could be anything from doing a database read to making a HTTP request","sorry; what design isn’t very good?","for 1) use select not sequential waits on channels","ok. I guess I was confused because you can select to get the results of one channel and interact with it, but not both? or you’d select, store the value, and then break once both values are stored?","hmm","how do I handle an email with no content-type","kevinburke: https://gist.github.com/nilium/2ce96b86aba257d5... ← So, I made it shorter.","I'll just use text/plain","the specific email I had implied such","Although I have no idea what ipinfo.io is supposed to be doing.","At any rate, ipinfo.io very much does not want to produce JSON","yeah :(","you have to swich the user agent i think or hit ipinfo.io/json","Nilium: this is helpful thanks!","At any rate, the point is, think in reusable units.","here's another take on it: https://gist.github.com/nickvanw/496db8a186bc96...","right, I can see that works but you also don’t send back any data from the goroutines","you could easily send that data out a channel","The goroutines could also just write to independent variables and I think that would be race free.","I'm trying to duplicate the javascript example you have below","Provided the wait group were still in place.","it would be roughly the same number of lines to send the output to a channel and print it","The main thing is just eliminating redundant code, anyway.","i.e., separate functions per website","indeed, and separate response structs (if they are the same)","is it possible to expand a variable instead of a name in template ? instead of: {{ range $vval, $node := .something }} I would like to do {{ range $vval, $node := .$a_var }}","I updated it to use a select{} but it got longer","thanks ! :)","I also tossed the field tag 'cause it's not necessary, but having one doesn't hurt.","Nilium: Huh, I  figured the race detector would complain about that","maybe not!","I'd run it with it on to test, but as long as you don't have concurrent reads and writes, it should be race-free. Having the waitgroup in there should ensure that the writes must all happen before the reads.","acidfoo_, does it not work when you just do $a_var?","is a_var in your scope?","no it expand the \"string\" and it says I cannot iterate over \"the string\"","expanding it works, but it doesn't create the behavior i'm expecting","because .something is the field of a struct","Did you mean to do index . $a_var ?","Oh, well, fields are different. Can't do that.","ok!","$avar := .something","?","Nilium: I can do “go run -race request.go” too right ?","kevinburke: https://gist.github.com/nickvanw/87baa2a9752273...","I think so, since go run should accept all go build arguments?","https://gist.github.com/kevinburke/420afcc1cb11...","so yeah that’s a lot simpler if you just declare vars and then assign to them","manacit: neat thanks!","if the sites had different output, you might use an interface with methods like `IP()` so you could use different structs, but make a chan of a single type","For sure","\"Pixelmator Team <info@pixelmator.com>\"; \"Pixelmator Update, Learning Website and a New User Manual\"","panic: multipart: unexpected line in Next(): \"1\\\" height=3D\\\"1\\\" border=3D\\\"0\\\"></body>\\r\\n\"","there has to be something about parsing imap messages that I am missing",">_=aspNetEmail=_",">pixelmator is a mac os x program","I'm tinkering with Golang for the first time and I cannot seem to figure out what's going on when I use goroutines. I'm building a crawler for fun, and when I do not use go, things work fine and I do not fetch the same URL twice. But when I switch to a goroutine, I get lots of extra calls. Code here:","https://gist.github.com/smizell/c9bc54b30c4eb3f...","is urlencoding a good way to make sure a string never has embedded whitespace characters","It's a way to make sure it probably doesn't. Whether it's a good way or not depends on what you're doing with it.","er","not urlencode","net/url.QueryEncode","QueryEscape","I just need a transform that will remove whitespace for machine consumption","QueryEscape isn't bad for that, but depending on what the machine is doing with it there may be something better.","converting it back","my program has two steps: a task list generator and a task list performer","the task list performer reads lines from the task list, extracts the first three words after strings.SplitN(\" \", 4), reverses the encoding, and processes","it's two steps so a human can filter what they want to do","If you're writing code both sides, and it's a quick hack rather than a long-lived protocol, then it's good enough.","actually","I might just use base64 instead","If you want something cleaner and human readable then maybe doing something like the shell does - quoting \"words with spaces\" and backslashing escaping or doubling quotes inside quotes.",". o O ( or CSV )","lluad: SU5CT1g= 13597 ZXF1aWRpdmlzaW9uLmNwcA== | folder:\"INBOX\" filename:\"equidivision.cpp\" from:[Pietro] Gagliardi <pietro10@mac.com>; subject:\"problems\" contentType:\"application/octet-stream; name=equidivision.cpp\"","example","the three things before the | are used by the program","the things after are used by the human to filter","That's a level of horrible UI I've seldom seen outside academia, but it's perfectly workable. :)","If your users are happy with it, go for it.","I'm the user in this case","If I were doing something like that I'd probably wrap all the machine readable junk into a single blob, base64 encode it and put it at the end of the line, rather than the beginning, to make it more pleasant to read and delete lines in an editor.","this is a quick and dirty thing","Then go for it.:)","if I ever need to make it popular for whatever reason I can decide a better UI","such as an actual GUI","I have a thing for that :v","panic: imap: exclusive client access violation","getting sick and tired of this","What's your end goal?","mass-downloading select attachments","so I don't ahve to fiddle with webmail or finding lots of emails individually","andlabs, im pretty sure it's not as hard as you're making it lol","last time i fucked with imap was with java and i did something similar in like 10 minutes","just use an api","it's not hard","I just don't understand what I'm doing wrong","this is a rathe rlow level API","...","is the server forcibly logging me out","unless I'm doing the logout myself","yeah I am","I see","it's the unexpected EOF that's happening","not the sync issue","so why is there an unexpected EOF...","is it possible to compare the value of 2 variables ? {{ if $val eq $vval }} doesn't seem to work :|","neither using \"==","thanks in advance !","maybe I should chunkt he fetches","okay hopefully doing 100 messages at a time won't muck the server","nope...","the correct syntax is: {{ if eq $val $vval }}","jfc why can't I get something more informative than \"unexpected EOF\"","adding a nop after every fetch seems to be doing the trick...","nope","spoke too soon","...BODY[] marks the message as read","oops -I happen to have over 48000 unread messages in my inbox","maybe I'm killing the server :v","(BODY.PEEK[] doesn't mark it as read)","...nope...","1 ms between every chunk; hopefully this will make things work","[19:04:53]  <andlabs>WHY am I getting a zeor byte packet?","[19:05:07]  <andlabs>if only the Gods of ARPANET would tell me","maybe someone fixed it in a fork of this imap library","I found one fork that looks promising","I'm trying to optimize my color package, its like fmt.Printf but for colors. this is how it is now: https://github.com/nhooyr/color/blob/master/hig.... It uses strings internally, so I moved it all to []byte slices here https://github.com/nhooyr/color/blob/byteSlice/.... are any other performance improvements possible?","well hello","do any of you know if i can add an youtube playlist to my google account usng youtube api?","oh my god russ cox wrote a high level imap library — let's use that instead; it's guaranteed to a) be higher quality b) be easy to use","...which is gmail specific and is not fully implemented :|","maybe it's that I need [TEXT] and not []","nope, though it got much farther thist ime","maybe it's just server throttling...","maybe I have to close and reopen the mailbox each time?","this isn't fun anymore","...","wait","is it disconnecting after 4 minutes?","Is it much more efficient to switch on an int versus a string? I'm wondering, if I use gob to talk between two services over a network (just gob over raw TCP), if it'll be more efficient to use an int for the \"action\" parameter of the gob-ed object, versus a string?","how much efficiency do you want","how are you measuring it","Well I'm looking at this from the perspective of JSON versus gob. JSON is going to be fine for me, but the thing is, Gob is better in Go<->Go communications, even over networks, so it's therefore easy (easier?) to implement versus JSON.","I can go gob over HTTP, but if it can be done over straight TCP, and I can just send over gob-ed object with the instructions and actions in, that's even more efficient again for not a lot of work.","So I guess I'm trying to evaluate the amount of work needed measured against the gains, which seem like very high performance.","I'm not sure I'd say very high performance","what are your priorities/goals?","In this case, just getting shit done, but I'm academically interested in understanding the potential performance gains from other people's experiences.","no it's definiitely not 4 min","movedx: best way is to benchmark using the structs you are using (vs some arbitrary benchmarks)","disclaimer: I haven't used gob","Ah OK. Nor have I, yet. Gob is meant to be cray fast versus JSON though. And it supports more types.","JSON parsing in Go is actually poor compared to some other languages, but it's more than sufficient for a lot of use cases.","movedx: from what i've seen, cray fast is a bit of an exagerration.","Unless your shit is mission critical.","usualy its critical my shit gets flushed completely","let's try something different: BODYSTRUCTURE instead of BODY","...","well this time we have an EOF, not an unexpected EOF","I'm not usre if that's better","some email with an invalid header","http://pastie.org/10784557 ...uhhh I'm pretty sure this isn't even remotely a valid mail header... can someone confirm?","how am i getting an untyped nil","noethics: show code","actually heading home bbl","andlabs, https://dpaste.de/p6TZ","o","well line 14 gets executed","in that code","does it just mean that `node` is the only type that it is","to the spec i go","case nil:","printString(\"x is nil\")                // type of i is type of x (interface{})","yup","it's not assignable to any other type in other words",">_>","which is weird in this case since it's an interface","another example of why null/nil sucks ;D","nvm","i just can't read docs","\"Walk visits each of the children of node with the visitor w, followed by a call of w.Visit(nil)\"","noethics: did you fix the issue","because I'm not seeing it either","andlabs, it's not really an issue","ok","andlabs, just didnt know you could have `nil` in a type switch","since nils are typed","in a type switch nil means the value interfaceTypeOfSwitch(nil)","so in your case...","it would be ast.Node(nil)","since a nil interface value has no concrete type, the case nil handles that","you can see it in action too: call n.Visit(nil)","yes","\"Walk visits each of the children of node with the visitor w, followed by a call of w.Visit(nil)\"","yeah","I forget why","I once knew but not anymore","well if you're parsing something and keeping state","the nil at the end can help you `save` it or aggregate all the state","sometimes there might not be a signal to stop otherwise","i guess",";D","also I really like that color scheme going on there","that's what my vim looks like with javascript","maybe with a less neon red for the symbols it would be perfect","even the line highlight looks good","monokai sucks with go for some reason","i would have to go play with it","oh that's what it is","cause it doesn't use green at all","uh","there's a whole lot of green in your paste","is vim doing something different?","locall","y","i have no green","fail","(in go syntax)","what color does it use instead","white","huh.","it's actually co mpletely different for go","idk why","andlabs, http://i.imgur.com/thuenYl.png ","looks like that but with js i have that green for the white","yay my code finally left the inbox","(After ignoring invalid email headers)","lol","noethics: http://pastie.org/10784557 analyze this","andlabs, i have quite a bit of experience with mail :P","paste it without the hex","it's hexdump -C from encoding/hex","you should be able to undo it","HA IT REACHED THE END","why are you viewing it with hex","in case it was binary garbage","what are you trying to even do again","download attachments from an imap server","noethics: in bulk","first generate a list of available attachments","then manually purne the list","then feed it back for automated download","andlabs, feed what back","the list of attachments","which is of the form","[base64 mailbox name] [mailbox uidverify] [message uid] [base64 attachment filename]","(followed by human-readable info about the attachment which the third step ignores)","http://sprunge.us/WdgX","behold! a disastrous mess","but it works! I'll refactor it greatly later","andlabs Technical debts you better get rid of now.","sure","I am doing an exercise in The Go Programming Language where I have to define a Writer that counts words and a Writer that counts lines. There is a hint to use bufio.ScanWords. How do I create a Scanner with the byte slice I receive from Write?","I saw an example of a scanner created from a Reader created from strings.NewReader. Is the best way to convert the byte slice to a string?","na_, not sure what you mean","na_, why would you receive from `Write`","noethics: One of the arguments to Write is a byte slice. As the implementor of Write, I receive the byte slice and must determine how many lines/words are in it","na_: https://golang.org/pkg/io/#Pipe","but i'm not sure wether this will leak a goroutine from the Pipe if it's not closed","na_: you can use ScanWords directly, but you will need to do the buffering yourself","does anyone know what this gb error means? FATAL: could not load all packages: found packages rand (cgo1.go) and rand2 (cgo2.go) in /home/james/code/src/go/doc/progs","i got this by running `gb build all`","purpleidea: well, rand != rand2","hyphenated: that's fine, but why would gb tell me this, i'm not working on either of those things... hence the confusion","purpleidea: normally, 'go build' wouldn't be happy about building that directory","I expect 'gb build all' has the same..unhappiness","that dir isn't even in my $GOPATH or related to anything i'm doing, i don't know why gb is even looking in there","which kind of bothers me tbh","na_, you receive from where","why should *I* always have to go into ~/code/gopath/src/project... everytime i want to hack on my code instead of just going into ~/code/project/ WTF why is golang so opinionated about this????","(and how do you get around it?)","purpleidea: symlinks are nice.","dyreshark: i tried that, and they don't work!","dyreshark: if you go in via the symlink it sees your project as not in the dir!!","then make a go_cd function, which cds to ~/code/gopath/src/$1","then you just have to remember to type go_ :)","dyreshark: oh come on, that's ridiculous, the point is i'm having to hack around golang-- is there even a *single* other programming language that does this? it's insane!","that's insane; don't fight the language.","every language has sharp pointies.","use a separate workspace","if you must","but the GOPATH exists because of tooling","mohae: i thought of using one $GOPATH per project, but i still can't do that, because it requires src/ pkg/ and bin/ inside it, so if i want ~/code/mgmt/ in $GOPATH it would have this other dirs which i already have","dyreshark: yeah, no kidding, but this one takes the cake","purpleidea: well it's rare to have multiple workspaces; and usually unnecessary","mohae: i've been coding for years, and i've *always* put each project in ~/code/$PROJECTNAME now i can't?? this is insane","purpleidea: you can if you don't want to use Go","mohae: yeah, exactly","purpleidea: the whole tooling ecosystem and the way Go works is based on that.","the consistency is a good thing, imo","^","it's also beneficial in team environments","mohae: what really bothers me, is that i get the feeling that this is based on what serves google best, and everyone else second, and hopefully it's convenient, that's what bothers me","purpleidea: and I'm willing to bet i've been coding longer; I've managed to adjust.","mohae: no doubt","purpleidea: it's based on consistency; which is a plus on large projects; and the Go tooling/ecosystem.","so i haven't needed to have my project in $GOPATH and everything works, except i tried to use vendor/ today, and it won't work unless you're in $GOPATH","ofc not","when in Rome","mohae: i heard this argument when i started learning golang, and i figured \"ok\", but now that i've thought about it, it really doesn't make any sense -- you need to have some $DIR (like $GOPATH) where things get downloaded too, etc... but there's no reason why *your* project needs to ALSO be in that dir. that's my point","purpleidea: well no reason aside from that's what all the Go tooling expects.","mohae: right","So you're saying Go shouldn't have to know where Go stuff is, it should just magic its way around?","Nilium: given that computers are basically magic, i think that's a perfectly valid approach.","Nilium: no, read again, i agree you need some $GOPATH, but why does _your_ project (which contains no dependencies) need to be ALSO in $GOPATH","Because your project is also Go.","dyreshark: I disagree","Go needs to know where Go stuff is, your project is Go stuff, ergo it must be in the GOPATH. Maybe your project is its own GOPATH.","Nilium: but a technical reason why they needed that condition","mohae: i was being sarcastic ;)",".. Knowing where Go stuff is _is_ a technical reason","also, the expectation of magic amongst devs is too damn high imo","Nilium: but my project doesn't need to refer to itself, or if it does, it's because i'm running a command in THAT directory, so it knows where it is!","No, but Go does","Go needs to refer to your project.","Nilium: $PWD ?","And in order for it to identify your project, it has to be in the GOPATH.","OK, so you run go in some directory relative to your project.","What happens?","Can you only run the go tool in one directory?","Do you have magic hidden marker files?","purpleidea: go tooling is oriented around \"packages\" and \"import paths\" and such. it's not a \"mine\" vs \"other people's code\" thing","Do you want to _explain_ magic hidden marker files to people if it does?","Maybe you search up the directory tree for a src directory and say that's a GOPATH. Does that consistently work? Do you keep searching up? What if a package is named src?","At what point does it break down and you just go \"OK, I have a list of paths that are Go workspaces\" and agree that it's the easiest possible solution?","Are you _really_ thinking about the implications of what you're saying, or are you just forgetting that your project is also a Go package?","purpleidea: so as far as the tooling is concerned, your package is just an arbitrary package to do its tooling things on.","Nilium: well because this all felt a little like nonsense (what go tool is doing) i looked into gb, and it makes a whole lot of sense, except that i don't want to name my project src/","Except gb isn't the go tool. The go tool has its own expectations of organization so that it can find and put things together for you.","You either agree to it, or you build your own weird thing like Google did","'Cause Google doesn't use the Go tool","They have their own build system, so the whole being-convenient-for-google thing doesn't apply either","Nilium: now that's ^^ the most clever point -- what do they use?","Nilium: it all makes even more sense now if that's true...","I'd assume it's an add-on to Bazel.","Nilium: you just caused a lightbulb to go off... thanks!","okay, go tool *could* decide to use $GOPATH+$PWD as the $GOPATH, but it doesn't because that would be more code to write, but i think it would be perfectly sensible...","It could. You could also modify your GOPATH before using the Go tool.","and instead of being sensible, like every other programming language, google wrote the easier dogmatic thing, because it was easier to do. hence go tool","Nilium: how would i modify $GOPATH ?","GOPATH=…?","(btw sorry for the ranting, i've been fighting with this to do vendoring for a few days)","Nilium: GOPATH only lets you have a single path, not a search path",".. It's a search path","Nilium: you sure??","Yes.","I said \"list\" for a reason when I described it earlier.","hm, let me re-test, i tried this...","My bad then, let me test again","GOPATH=first_place_to_look:second_place_to_look ?","correct","hu mom","hi mom","can we talk about go's enforced directory structure","it doesn't like relative paths though.","Or symbolic links.","Nilium: yeah :(","Nilium: originally i actually just put my project in $GOPATH and i had a symlink to it, but going in the symlink doesn't work. is there a reason for that too?","Minor fun-fact, this is my ~/bin/go: https://gist.github.com/nilium/c3c83f471e1c4299...","IMHO it's a bug","Symlinks are not universally supported on all filesystems and OSes and are difficult to work with, so they're not supported.","For example, if you have a cyclical set of symlinks, what do you do?","One option is to explode","Nilium: and what's 'gopath' ?","Nilium: what does your $(gopath) do ?","yeah","https://github.com/nilium/gopath","It's basically what I had back before I used wgo.","And now it just looks for wgo stuff too.","Nilium: I just use a shell function","I used to, but it was easier to work with the FS this way.","Nilium: wgo ?","https://github.com/skelterjohn/wgo","Nilium: cool, i like that this doesn't look for a 'src' dir, gb does that and i think it's a bad diea","idea*","the funny thing, is here i am complaining about $GOPATH, but every golang pro i've talked to like yourselves, is using some hack around the standard $GOPATH semantics. kind of ironic eh?","wgo is on the list of more underrated tools since it's simple.","Except I'm not using a hack around it, I just have multiple GOPATHs.","In other words, standard go practice: write tools to solve problems.","I've only ever used glide","The only reason I know about glide is because the people behind it were really.. enthusiastic about mentioning it everywhere on reddit","it was rocky in the earlier versions, but since the 0.8.x releases it's been pretty good","id just like 2 say that golang is by nature against the religious values of islam and inshallah u all will burn in jahannam","Nilium: yeah, but the \"marketing\" seems to have attracted some good developers to the project, and it's become a really solid option","Nilium: do you think it would be a terrible idea if i modified your ~/bin/go script to instead use $GOPATH + projectdir/vendor/ into $GOPATH?","It's your foot.","marketing isn't all useless","lol","I don't have a problem with marketing. I did when I was 16 and stupid, but these days it's handy to know what's out there.","Nilium: i know, but i'm offering an idea, and wondering if you think it's clever; i will try it and see","/11/10","damnit","but no, another \"Masterminds\" project, squirrel sql, has some really \"interesting\" design decisions","the most interesting of which is the choice to use non-pointer receivers for all of their methods","Like I'd have never heard about GitColony without marketing, and that's because their CEO pinged me after I was rambling about code review on Twitter","And I don't really like GitColony, but I like knowing what options I have","And maybe they'll build something I do like later","or maybe enough people with a clue will flock to the project and make it better","Oh, my light's been flickering for maybe 3 hours now and it finally made a \"bonnn\" sound and died.","Well, GitColony isn't an open source thing, it's very much a business","So they'll need to build something people like to succeed.","ahh","Or they'll get VC funding, waste a lot of money, and then die","I'm not familiar","I guess I've not yet been successfully marketed to by them","So how long their death rattle is is mostly up to them","I'm admittedly sort of glad that I work for a company that doesn't take outside funding","Unless you're hunting around for code review tools and have a tendency to ramble on Twitter about it, they probably won't go after you specifically","I like painting targets on myself","lol","I try my best not to do that","but oddly enough, a recruiter managed to work his way past our customer support call center and get transferred to my phone line, and then I had an awkward conversation surrounded by coworkers","that was awkward","I'm glad I don't have a work phone line","I used to, but I didn't use it, so I asked 'em to take my phone","Don't really want a phone on my desk anyway","Hey there, I created a Direct3D wrapper for Go: https://github.com/gonutz/d3d9","Is it still really painful to use D3D? Haven't touched it since D3D8 and Managed DX9 (which was considerably less painful than D3D in C++)","No it actually is quite nice an API. I actually like it better than using OpenGL right now.","I'm more in the OpenGL-on-principle camp, but I never really had a problem with the API either.","Well the problem with OpenGL is that it does not come pre-installed with Windows.","Nilium: you're a genius. the go bin hack worked with some modifications, btw, i get that the which -a | sed ... is meant to pick the correct go (and avoid ~/bin/go) but how do the sed commands do that? (my sed sucks)","I created some 3D stuff for work recently and found that my OpenGL 3.3 code path only worked on about half the machines we have. The DX9 path works everywhere, though.","It helped that I ditched Windows ages ago too, but that was mainly due to it just being a lousy dev platform.","Nilium: http://paste.fedoraproject.org/349206/74557214","And just to make everything more illogical, the semantics for $GOPATH are that it must have code inside the src/ dir BUT the semantics for vendor/ are that it must NOT include src/ yet it allows subdirs with packages as much as you want... how does this make sense? why isn't a github.com dir inside a src/ okay for vendor ?","are you  blaming Go for how a 3rd party tool decided to do things?","(not sure if you are talking about the vendoring experiment or some tool)","mohae: vendor is part of golang","yeah vendor experiemnt","The 2q bit basically means it'll read up to the second line and the d just deletes the first line. If you wanted the third, you'd have to do 3q;1,2d","purpleidea: src/import/path/here/vendor/import/path/here","purpleidea: is this for mgmt?","It's probably not the best way to get the second line of output from something, but I'm lazy.","mohae: this idea: http://paste.fedoraproject.org/349206/74557214 fixes my issue, and now everything is great, *except* that vendor format isn't the same as the expected vendor format if people want to do it \"normal\" gah","mohae: yeah","Nilium: fair enough, thanks anyways, good idea!","Just don't blame me if you blow off your foot.","purpleidea: I guess I'll wait to see how what you are wanting to do affects the workflow.","I always blame Nilium","unless eric_lagergren is around","mohae: i'm going out of my way to _not_ affect anyone elses workflow","Don't worry, I pass the blame on to my coworkers","Nilium: hehe, well i mostly sit when i'm coding, which is always, so maybe i won't notice ;)","mohae: +1","err -1 that is (missing foot)","Also, never call me a genius ever again","Nilium: fine with me","Trust me, there are very good reasons for it.","Nilium: such as ?","My ego is big enough","why does gofmt crash vim once a day","oh, i thought you meant about why i _might_ blow off my foot... RE: genius i was trying to be nice :)","Also, I grew up with a lot of people telling me how smart I was, and I just personally don't like it.","Nilium: but i think i've got a cool solution, why keeps everyone happy, especially mohae","Nilium, noticeable","I have a quiet pit, I will use it","that's a first","also, I prefer to call Nilium a mad genius.","guys","im writing a go -> lisp compiler","you gonna use it or what","I only use the word genius sarcastically, for what it's worth","no","ya you will","pls","I'm OK with sarcastic usage.","my idea is that it should be able to compile both ways","go <-> lisp","but the types are a struggle","(RoundTrip (*Request) (*Response error))","i have it like that currently","butit's wrong","so one of the things that's awesome about lisp requires that it be a runtime language","why","which lisp","because code and data are so similar","it begs reflection","mmh","i'm not really sure that i agree with your statements","noethics: lisp is popular for AI for that reason","the dynamicness of it","clisp","i thought that was just a coincidence","it doesn't seem like one of those things like","the AI community chose lisp because it was the best choice","more like someone probably pioneered something using lisp and everyone followed suit","but idk the history ;D","well, there were less choices back in the day","but definitely lisp code and lisp data being represented similarly played a part","at least, the professor of the AI course I took in the 90's said so","they're not represented similarly","they are isomorphic, as list itself is data","lisp*","and that was his reasoning for requiring all projects being in lisp","and lol :p","that said, other than elisp, I haven't touched lisp since the 90's","that's pre-noethics era","so my memory is fuzy","fuzzy","if it was after 1991 i was alive",":D","it was 1998 or 1999 when I had that class","oo","What's the easiest/cleanest way to update Go?","mohae: for your approval (shouldn't mess up your workflow or the std workflow in any way) on the other hand, this lets me keep mgmt in ~/code/mgmt/  /cc Nilium","mohae: https://github.com/purpleidea/mgmt/commit/2ab72... /cc Nilium (forgot the link)","NeverDie: i use my distro's package manager","NeverDie: so dnf update or apt-get update or whatever depending on what you use","NeverDie: Download binaries from site, follow install instructions on site.","NeverDie: easiest is one of these scripts https://github.com/mohae/install-go","Package managers install Go in non-standard ways.","or what Nilium said","Hmm, I see.","Nilium: wat!? another thing i'm doing wrong :( ... what's wrong with what Fedora does for example? Can you report the issue to bz?","It installs parts of Go in different places.","This is due to the distro having rigid and ergo stupid requirements on packages.","The Debians do the same thing.","purpleidea: package installers tend to be older versions and install Go per distro standards; which are different than Go.","That too.","Nilium: well i've never had any issues due to this, but if it breaks something please let the distros know","I think Ubuntu's still on 1.5.1","purpleidea: you've already come up against the \"uniqueness\" of Go","i wish i was still on 1.4.x (it was way faster)","mohae: hehe, that's a distro fight, not my problem","The distros try to make changes that accommodate their wicked ways. I don't care about reporting issues to them because I won't use their packages.","Nilium: so you're a ... Windows users??","I'm a Linux/OS X user.","I don't install Go myself","I install Go by downloading the tgz and extracting it as /usr/local/go","And that's the entire installation process.","cool","This applies on both Linux and OS X.","And elsewhere.","Windows is the only different one, where you install it to C:/Go","Which is mostly because Windows is bad.","well thanks for everyone's help today and this discussion and sorry for any of my ranting. I found a solution (which i mentioned above) which seems to satisfy everyone for now","I'm too lazy to install Go manually","Windows is bad, yes :)","mohae: last change to nack the patch before it goes to master","chance*","The thing I suggested shouldn't be part of your repo.","It should be part of your local system, and your CI shouldn't require it.","CI builds, builds by other people, etc.","purpleidea: what Nilium said","If I saw that in a Go project, I'd probably move on.","Nilium: that's all correct and I agree.","E.g., you should just have a make.bash in your repo that does your build with the correct GOPATH set.","mohae: it's not required in the ci or anything","Or make.sh, I don't care what shell you use.","Nilium: that's all true","I wonder if scons still exists","Hmmmmm do I want to play some SplatoonyesIdo","I just need to get friends who play this now.","Nilium: want to play portal 2 two player?","hello everyone. what's the 'vendor' of golang in your mind?","that gopher, duh","he's got the sweet stuff","go has no do while loop, so should I just write an infinite for loop, check the loop condition in the loop, and break if it's false?","na_: yes","na_: go has for { }","na_: https://tour.golang.org/flowcontrol/3","purpleidea: Isn't that what I'm talking about with \"infinite for loop\"?","you don't need to check, it does it for you. look at the page","although it checks first and then runs","bbl","yeah, golang compiler will check most problems like 'infinite for loop' in the building time.","what's the closest equivalent to pythons' os.fork in go?","purpleidea: Huh?","revolve: you probably looking for https://golang.org/pkg/syscall/#ForkExec tho you probably don't really need it","revolve: you can manually do the syscall to fork, but it is very, if not impossibly, difficult to determine what state the program will be if forked.  I think it's better to us os.Exec() to call your program with a different set of arguments, or a different program entirely, and communicate via rpc, pipes, unix sockets or something along those lines","I think if someone's asking about fork, they probably don't want exec. It would be easier to use os/exec to spawn a new process, and far less likely to leave the new process in a really weird state.","Nilium: that's in line with what i was saying. I  wasn't suggesting the exec syscall :)","is there any library that abstracts the gl stuff from golang.org/x/mobile","Abstracts it how?","it is still a bit tedious to build a gui from bare gl","So you want a GUI library, not a GL-abstracted-thing library?","something that gives you something like windows and other basic ui elements","yep","andlabs was working on something, but that was native windowing. There's the shiny stuff, but that's all experimental.","So, answer's probably no.","I've written enough GL GUI libraries to know I'm not doing that again, either.","Someone needs to do it","It's a glaring weakness of Go","Or put more optimistically, an obvious opportunity?","golang is designed for server programming in Google to replace C++.","Well, if you can find a way around graphics APIs and windowing systems in OSes restricting event loops for UIs to specific threads, then you'll probably see more UI and graphics libraries","As is, using Go for these things is difficult due to the inherent weaknesses in the threading model of most UIs and OSes","na_: I think there are GTK and QT bindings for go","And graphics APIs","I read the GTK and QT bindings aren't correct","uh. there's curses bindings?","Because they don't properly handle signals raised by those libraries","Anyway, QT is a garbage foundation for a Go GUI lib because QT also contains cross-platform functionality that abstracts over OS syscalls, which Go's standard library already does","na_: i can't imagine the bindings are particularly mature, just due to how complex the two libraries are.","I've never really done much in the way of gui programming though, so (shrug)","Nilium: I don't understand your comment about restricting event loops","Nilium: Can you explain that?","Which thread does an event loop need to run on in OS X and in Windows?","Answer: OS X: thread 0. Windows: the thread a window was created on, and _only_ that thread.","What does an event loop have to do with anything?","(in short - main thread)","Windowing.","I don't get it","Windowing, rendering to a window, using your graphics API, which is also locked to its context's thread","Okay","Basically, everything you want to do","The GUI lib can be graphics API indepdendent, providing only a data structure to be drawn","Or maybe it could depend on a graphics API, and just make context-dependent draw calls","And rely on the user to create the context","Nilium: This just means you need a model in which a value that represents a window has an associated goroutine that is locked to a thread, and handles all of the actual API calls.","I'm not really following the problem","What if the GUI lib just has a model of a gui that is graphics API independent, and then it has functions that take mouse coordinates which update the model","But you still have to draw it yourself","I don't see what that has to do with threads","KirkMcDonald: Which is inherently awful","na_: The problem is that doing anything window-y or graphics-y is inherently locked to specific threads in the OS","Nilium: But unavoidable.","As a result, any code written around that has to actually be aware of threads","Maybe the code you call doesn't look like it is, but it has to be.","Nilium: I don't understand how.","I.. already explained how..","Are you saying that creating a window is different on each platform?","And that a window is locked to a different thread?","Okay","Are you just.. ignoring that the OS and graphics drivers and graphics APIs exist?","You did say that","That you are actually interacting with an existing system to draw a window?","Nilium: Yeah, I think I might ignore that for a GUI lib","That the existing system is fragile and stupid?","Like, the GUI lib would have an abstract model of a GUI","Well then it's not a GUI library, it's a UI library and the G is provided by something else","Okay","A UI lib would still be nice","And that G library has to be aware of the system it exists on and the threading model for its windowing system","Yeah","Which is inherently painful to do in Go","The Go standard library already abstracts over a bunch of different OS abstractions","A GUI lib could do the same thing, right?","What's the state of Go for making Android apps these days?","It does, but the only thing it provides for threading is to lock a goroutine to a thread","It doesn't say _which_ thread","And I think exposing more threading functions would be a mistake","Okay","I don't understand this part because I haven't learned goroutines","I'm still learning Go","I tried doing graphics programming in Go and decided that while I like the language and concurrency model a lot, it's clearly not suited for working with existing UIs","Someone said Go was designed to be a server programming language? Is that true?","Where do the creators say this?","Pretty much.","It does seem geared toward that though","I think I remember them saying it was also designed to be a systems programming language like C","So like OS tools","Servers and backend systems, basically.","it all depends on what you want to write with it","The way I see it is that if it involves working with existing stuff that's written in C, the pain factor grows immensely","Nilium: Is the issue about goroutines present even if you only have one goroutine (the main one)?","Main one might not be on the same thread at all times.","Oh, weird","Is Go faster than Java?","I seem to remember early on that one of my pet peeves with rust and Go, when I was looking at GL stuff in both, was that neither could guarantee the program entrypoint would run on thread 0. Rust was a little worse in that it could sort of guarantee it wouldn't.","NeverDie: http://benchmarksgame.alioth.debian.org/u64q/go...","I think that's since been changed and at least at startup you'll have main() on thread 0 in Go","And in Rust I have no idea because I stopped keeping up with it since it was syntax roulette every time I looked.","Nilium: But it can still change from that thread","Yes.","If you do something that's going to block, it'll pull the goroutine off the thread and stick something else on there if there are other waiting goroutines","Why isn't Go replacing Java then for Android development?","because go for android is too new","because it's been trash all along muahahahahahahahahahahaha","and the java android fanbase *within google* let alone outside is too vocal","Yeah but Apple has Swift.","go is useless, you were right","And replacing an entire language for an OS written mostly in that language is kind of difficult and probably not going to happen","go and objective-c are incompatible in manyw ays","Apple has Swift, Swift compiles to the same thing as Objective-C","swift was tailor made to fit in with the objective-c infrastructure","Pretty much.","Isn't the sandboxing nature of Java good for Android's security?","Swift was.. Taylor.. made.... I'm sorry.","So we're stuck with Java forever?","Could that be done easily in Go?","NeverDie: Maybe?","Nilium: is Go out of style","Someone could write a Go compiler that emits JVM bytecode.","Gross","s/could write/has written/","I sort of figured it'd already been done, but I don't keep up on things.","So, if you call C code from Go, it could run in an unpredictable thread?","yes","it will not jump threads liek Go code can","but whether that thread is the same as a Go thread is an implementation detail","But if I call a C function twice, it could run in a different thread each time?","There are also inherent limits to what you can do when calling into C from Go.","no","otherwise C interop is infeasible","It'll probably run in the same thread if you call it twice in a row, but I don't think the compiler guarantees anything there.","Well, if you have C functions that do windowing stuff, I wonder if you can make it all run in the same thread","I still don't understand this problem very well","I guess there's no point in thinking about this until I actually plan to program something","Nevermind","yes, window systems are inherently singlethreaded","though a smart one like Windows will let you have multiple threads have their own windows","(you just can't cross the streams)","a dumb one like OS X's demands pthread_main_np()","Is is possible to creating C functions from Go ones?","*create","yes","//export","Okay","i wrote a device driver as my second Go project","it probably reflects better on Go than on me that it went pretty well","That sounds fun.","Huh, first Go JVM compiler I found is written in Scala, so that's definitely never going to survive","Can this be simplified? https://play.golang.org/p/VYm8iwPORl","https://github.com/hybridgroup/gobot/ part of this thing","I don't know whether the philosophy of Go is to be a small language or a readable langauge, or both. The lack of a do while loop seems to make it smaller but less readable.","What does count return?","Because \"we're going to infinite loop--just kidding break\" is less readable than do-while I think","Nilium: Count returns the stuff that Write returns, plus the number of tokens","OK, but what do you want out of discussing why you think Go should have a do-while loop?","'Cause if it's \"I want to have a do-while loop\" the answer's no","lol","Yeah","Nothing!","It sucks. Poo poo. The end","how do i write a uintptr to a file?","What specifically are the returned values for count?","You've got two ints and an error, I can guess the error, I can't guess two ints","Nilium: The number of tokens parsed without error, the number of bytes parsed without error, and any error from SplitFunc","So, last index seen.","Yeah","(for the second int)","For your own sanity, if you have multiple return values, name them","You're going to forget them later.","Okay","Yeah, I should have just done that instead of declaring i and c","na_: go has a do while loop, it's just called for","Nilium: how would you go about writing a string version of the int a uintptr's referencing to disk?","What?","fmt.Fprint(f, N)?","wow. Ok thanks","revolve: %p is the format specifier you're looking for.","cheers!","Or just use Fprint and skip the format string.","nick_: You are so cheeky!","If do-while was like while, it wouldn't be different","I'm going to sleep. I have a job to be at tomorrow.","I know, I'm amazed people work with me too.","If I name my return values, do I have to name them all?","darkbolt: \"cannot use pid (type uintptr) as type string in argument to fmt.Fprintf\"","na_: Yes.","na_: just do for x {a) do someting b) update x}","nick_: It's been said already.","nick_: I have to do for { do something; if (blah) break }","No","Here's the issue","say x is 0","initially","You can also do for someboolean {do something; updated someboolean}, which I will agree is essentially the same.","When do something results in x being 0, I want to stop the loop","However, when x is initially 0, I want to do something","That is the whole reason for do-while loops","The condition is initially false, but you still want to do something before exiting the loop","And the condition could also possibly be made true for the second iteration","btw","I never intended to continue this discussion. I accept that Go doesn't have do-while loops, and I think the alternative I suggested is the simplest way to do things in a do-while situation","Just don't want to get flamed for complaining more","na_: WHY HAVENT YOU DRANK THE KOOL-AID!?","darkbolt: Go is rad! Augghghg","I came from C. There is seemingly no program you can't write in C. I'm trying to go up one level of abstraction to have a more comfortable programming language, but like other languages I have tried, there are hidden roadblocks. The trick seems to be finding a programming language suited to your problem where the roadblocks don't appear","I want to write a server program thingy, so Go seems good for that","I think I would be asking for trouble if I tried to do every project in Go though","na_: I think once you get passed go's idiosyncrasies, it should be relatively comfortable coming from C.  Built in hashmaps are nice :)","na_: if u r ready to delegate some things to runtime, u'll be just fine","if u want to be in control of everything, u might feel a bit based","darkbolt: One issue I'm concerned about there is that there seems to be no way to write your own hash function if the built-in one is inadequate unless you write your own map structure too","Like, what if the built-in one is unbalanced","na_: this is true.  I've personally never run into the issue","But whatever. I'd have to write my own hash map in C too","na_: one solution i've seen is to manually hash, and use the byte array as the hash key.","darkbolt: Oh, that's cool","But that has an unnecessary performance penalty","you wind up doing 2x as much hashing, so I don't know if it's a good idea","Yeah","lol","Kinda stupid","na_: if you're _that_ worried about bounding performance, use a tree :)","Tree would be log n though","na_: _worst case_ log n","Yeah, I'd rather just write a hash map","Using an array","And pointers","Well, I'm going now","Night","hi everyone!","is there a way to enable sound for this irc chat?","it seems as if you have a $GOPATH that has two dirs in it (separated by colon) it doesn't work in the way a traditional search path does: it something weird or undefined if the same project (two different versions) exists in both dirs. i can't get it to override properly the one in the higher precendence dir","sound??","I have a task where I have a bunch of commands to run. Some of them need to be run in parallel with another, some (possibly groups of commands) need to be run chronologically before each other. Is there a name for this kind of task or libraries that can help you run things in a way that can be represented by a directed graph of some sorts?","I don't really know what this kind of task is called.","sounds like build systems","Yeah, it reminds me of that too. It's not directly related to the act of building a system, but I think the order of commands and stuff is similar.","I can start programming something but I have a feeling someone will say \"oh that's called XXX scheduling and there are packages for it here\"","kraueterbutter: why running in parralell is a must?","sor some commands","s/sor/for","They take on the order of 10m+, and they're all network commands. I'd do them all in parallel if I could, but logically some need to complete before others.","kraueterbutter: like pipelines?","_jd: Perhaps. I'm not familiar with the term :/","kraueterbutter: https://blog.golang.org/pipelines","I assume with something as complex as that u have to think about cancellation as well","_jd: Indeed, I do -- further stages in the pipeline should only run if earlier stages were successful. Thanks for the link, I'll check it out.","kraueterbutter: have a look at this https://golang.org/x/net/context https://blog.golang.org/context","how much do u know about go concurrency model?","A good amount, I'd say. I've implemented pipelines although I didn't realize they were called that :D","https://avocode.com/developers-2015/#data","kraueterbutter: than u should be good to go after reading these two :)","Yes, thanks!","I'm surprissed that 9GAG is more visited than stack overflow :)","I guess it's country based, i'd say that reddit should be instead of 9gag, but in general i see it as correct if you take in mind that you spend 15hours/day to install npm packages :D","true. But most of the people who ends up doing copy/paste from stackoverflow instead reading of actual docs","-who","Is this a viable scenario - multiple docker containers with it's own public ip?","why is pg driver package called pq?","the original c client is called libpq, and always has been. don't know why.","*p*ostgres *q*l?","http://dave.cheney.net/2015/11/18/wednesday-pop...","can someone explain why this is a race?","Isn't it just that the compute goroutine writes to the struct while the call to the version function reads from the struct to pass it by value?","huh?","hm","sounds about right what ben said","heh, I accidentally read the answer and it became obvious","I guess so.","so if version() read from rpc.result this would be an actual problem, right?","why \"if\" ?","well I see how it's a race, but the program seems to have a deterministic outcome anyway because the copied struct isn't actually used","\"there's no such a thing as benign data race\"","hi, arrays with variable length in go, its a thing?","they are called slices","just look at the documentation","\" Recursive types work fine, but recursive values (data with cycles) are problematic.\" what does \"recursive values\" means here?","Osleg: circular pointers","ah, why they didn't just write it like this -_-","they did. \"data with cycles\"","because they might not be pointers","they could be indexes into an array for all you know, who cares","Hi, I come from javascript, this is my first attempt at Go. My code does not compile, but I think the intent is clear","What should this look like, to be valid go code? https://play.golang.org/p/B4haVJhrnw","xqo: for u or for compiler?","_jd:  for the play.golang.org compiler","xqo: variable types are missing","What I don't understand how to do is to store a variable length amount of Network types, that I can look up by id","xqo: either use a map or a slice. here's the map option: https://play.golang.org/p/_2UeDrjATF","in javascripts User.networks  = {}; User.networks[123] = {id:123, host:\"freenode\", port:6667}","xqo: http://tour.golang.org/","thank you","_jd is right, you should probably take the Go tour","and learn about the basic datastructures","yes it seems like a huge shift in the way you structure code in your head is required for Go","if you had zero formal education, than probably","Will you take the time to rewrite my irc-client example so it is go-ified?","My goto idea was a bunch of objects referencing each other, like the example, but probably this is not the way to think in Go?","I also realize I should forget 'objects'","why not just read up on what is idiomatic go instead","I don't learn well that way, I must try first for reference experience. Otherwise what I read won't stick","tour.golang.org","is acln's code something I can keep working with, or must I discard everything and start over, because this is not at all the go way?","its fine, sure","would you do anything differently?","seeing as i have no idea what you are trying to do, probably","sorry. I want to make my own irccloud. This go backend will connect to any amount of IRC networks, and pass all data from the IRC networks to a web client. It will also receive messages from the client, ie {command: 'privmsg', message: 'hello', networkId: '123freenode', channel: '#go-nuts'}","hell","the client will send the backend commands like {command: 'joinNetwork', host:'irc.quakenet.org', port:6667}","which will fire something like the User.Connect","dont NIH and just use an rpc protocol like jsonrpc","quakenet still exists?","yes","import \"Network\", so I should capitalize module filenames?","package names. generally no","import \"network\"?","even though inside files everything that can be exported is capitalized?","const Exportable = 1?","see a lot of capitalized names in the stdlib?","I think I read that when you're writing modules, only capitalized names are exported?","hyphenated was referring to package names","correct. that rule doesn't apply to package names, only the contents of them","thank you","and since we are in the middle of this discussion anyways, please try to make your packages go-gettable, i.e. place them in the 'correct' locations","MyWorkspace/app/src/network.go","?","that is a perfect example of not go-gettable","what should the path be?","https://golang.org/doc/code.html","src/github.com/asd/myApp/src/network.go","?","better, but the second src might be a smell","xqo: no..","xqo: you'd normally separate things into \"packages\" and \"binaries\".","packages go in GOPATH/src/something.sensible/nameofpackage","and binaries go into GOPATH/src/something.sensible/cmd/programname","$GOPATH/src/github.com/myuser/myIrcApp/network.go","the \"binaries\" use package main, and produce an executable. the others are logical groupings of functionality","xqo, the full name of the package would be 'github.com/myuser/myIrcApp' then","isnt this what https://golang.org/doc/code.html wants?","cammel case in package name looks weird...","I like the dots too,","my.irc.app","src/github.com/myuser/irc/network, src/github.com/myuser/irc/channels, src/github.com/myuser/irc/cmd/myownirccloud","hyphenated: just to be sure, src/github.com/myuser/irc.stream/network.go?","you asked before for the package 'network', did you change your mind on that?","you might like dots, but they aren't valid for the package name","hehehe","and by convention, the package name and the end of the import path are the same","irc.stream is the app, network is the package, network is defined in network.go","no?","no","you get plenty of dots in the code, be satisfied with those","it is defined in network/blah.go","do packages have a default entry point file?","no, they are a _directory_","oh because package network in files","irc-stream/network/network.go: package network; in main import \"network\"","*in main import \"github.com/irc-stream/network\"","you should probably start with something simpler before you guess too deeply into the structure of your actual app","thank you","assuming that irc-stream is in github folder",":)","very true, _jd...","*in main import \"github.com/myuser/irc-stream/network\"","_/Users/xqo/Documents/github/go/src/github.com/...","please say yes.","import \"github.com/xqo/ircstream/network\"","thank you!","looks good, xqo","main.go in /cmd?","wait I regret, nvm","$GOPATH/src/something.sensible/cmd/ircstream.go, and then i call that; I don't use a main.go at all","xqo: stop guessing, start writing code","there's a limit to how much you can learn without actually writing code and running things","I am writing. I defined network; but now I want to write the file which imports network","what would be a correct way to check if the file is executable? parsing strings like \"-rwxrwxr-x\" for \"x\"es seems to me quite wrong","oh it doesnt matter because package main. nvm!","Osleg: attempting to run it","Osleg: permission flags won't mean much if the partition it's on is set to noexec","on the other hand if partition is set to no exec then the main program won't run","in my case scenario","Osleg: point being the permission flags don't mean it _will_ run","just that it's marked 'executable'","hyphenated: fair enough :)","thanks","it might also be missing some shared library, etc etc","so.. either just expect it to run and handle the failures, or if you can do some safe attempt to run it as a verification.. that's about as correct as you can be","if it is missing shared library, it will run and crash :P","no.. it won't launch","so basically the best way is to start, check for error code, if it's ok -> restart and fork","?","-form","s/form/fork","or read the first things I've said","and do that","attempt to run it, handle the failures","uhm, the first thing was \"attempt to run\"","how does \"restart\" come into that?","if it worked, it won't need restarting","cuz i want to drop control over the process","hm it doesn't seems that it's possible to drop control","are you writing a supervisor?","or just hacking one into what you're really writing?","hyphenated: supervisor it is","I'm not sure which question that answered","hyphenated: I'm writing supervisor","more precisely a plug-in system","main program monitoring a given direcotory for executables, if it finds any it starting them with given args, dropping controls and communicating via unix sockets","if you're a supervisor, you don't want to drop control","but you also don't want to be blocked by it","which is why they invented goroutines","hyphenated: aye, I see now, thanks","Hello Everybody!","So, i have been learning golang for a week or two and i decided to create my first project with golang( using mvc ultron ).","So i installed it using go get. But how can i start developing ?","Can anybody help my out a little ?","karlis: did u read this article https://golang.org/doc/code.html?","I acctually went trought the Gotour.","karlis: good. what's mvc ultron?","I will look into this article, maybe something could get cleared out.","karlis: this will show u how to organise code","it sounds like some random interwebs thing that you probably don't need to achieve your goal","@hype https://github.com/gernest/utron","@_jd Thank you!","hyphenated: wanna bet yet another web framework :)","there's clues in the name","karlis: if you're looking at frameworks, you have to decide whether you want to learn Go or some arbitrary framework","+1","learn idiomatic go first","you'll get more help from here about learning Go, but if you want help for some arbitrary framework (and its own unique problems) then you're kinda shooting yourself in the foot","But when you learn the framework, you are learning go too!","when u get comfortable reading go code u can read framework source code and decide if using it is a good idea","For example","because regular Go developers don't know those frameworks, and the framework author probably isn't able to teach you what you'd want to know","I learned Rails first, then i learned Ruby","karlis: that'd be true if it weren't for all the unique problems that are completely unrelated","Ohh","in the ruby world, rails == ruby","I have read, that in go its very easy to create a website using just go","or ===, I forget","@hyphenated :D:D:D","have a look into net/http","Yeah, but i will finish te first artile first ;D","and html/templates","P.S I just left my job, now thinking of doing freelance. If anyone have some tasks, hit me up :)","it is. but the long, complicated path to a useful website starts with choosing a framework","The website will be a simple blog.","Like, i will but in my portfolio there and stuff.","so choose a framework, copy-paste code until google stops returning results, give up, learn framework #2, copy-paste some more, until you give up and actually start learning Go",":D:D","you want the result of this to be a portfolio of developing a website or your experience with Go?","expiriance with go","I have big portfolio","40 sites","and #41 is going to fly you to the moon?","one ring to rule them all...","I'm not intending to discourage you, but if you're interested in Go, write a website in Go. with learning of what the stdlib provides","instead of taking random google results, copy-pasting them and saying \"this was done in Go\"","karlis: I'd suggest following the wiki guide first https://golang.org/doc/articles/wiki/","and if you just want #41 in your \"portfolio\", take the second approach","you should know the stdlib before you even look for a framework. the stdlib is much more powerful/useful in go","Thanks guys, i will take your advice! And no, i dont need #41 website of my portfolio. I just want to develop sites using go!","Also how to turn off these status messages when some1 has entered this chat or left :D","Really annoying :D","karlis: go is bad for freelancing","why ?","per my own experience","not enough projects","Osleg: this might change if enough people start using it :)","++","or freelancing is bad for go","Same was with rails in the beggining","Not look at it","_jd: sadly it will take time","karlis: not comparable","Osleg: Why not ?","Time is what go needs","different market shares","As i have read, developers love the language.","karlis: are you a developer, or just someone that emits code?","sadly freelancing world revolving around clients rather developers :)","there's plenty of interesting projects being developed in Go, and plenty of things that can be done well in Go given the choice of how to do things..","Osleg: From my expirience its not true! Most of my clients, dont care about language i use.","taruti: lots of golang postings? What website do you use for freelancing?","but freelancing is basically reverse-pimping","+","Osleg: a lot of time clients don't care for the language as long as decent support is provided for future updates.","so.. you're going to adapt to the market instead of having the market adapt to you","karlis: well, 7 years of freelancing here, over 1000 projects, mostly python/ruby/js. rarely C/Cpp/Go","Osleg, same!","taruti: \" decent support\" <- exactly the issue","Osleg: typically word-of-mouth has worked for me.","most of the clients prefer python/ruby because there is lots and lots of developers who can support it in a long run","Osleg: which is typically ok if one can provide them with a contract and someone who is a backup should something happen.","each time i was suggesting using go i've got answers like \"What is go?\" or \"I never seen go programmers, I don't want it\"","Maybe your clients are a bit hight-caliber :D","Osleg: so sell your intentino better","Mine doesnt care","same clients as every freelancer","Or i give arguments","on odesk/upwork/freelance.com","I ussuly force my opinion of my clients","on*","can't it be both?","Osleg: php would be no1 than","_jd: it is indeed","Osleg: 1000 projects in 7 years...","it just I will never touch PHP :P","hyphenated: -0","it's 100","didn't notice","Osleg: why not, u want to be competitive on the market :P","I'd like to stay sane for myself :)","100 projects and 0 PHP is impressive in its own right, I suppose","Hi","_jd: i stick with python and cpp as my first choices","you've been missed, leftpad","Jesus","if I can't find anything python/cpp then I extend to ruby/js","Osleg: let me guess, django?","More than 15 of my 40 are in php","_jd: NEVER","but got replaced with 1 line instead of 17","Beause some clients just want it","oh?","that;s new to hear","django is the worst thing in python world","imho ofc","why ?","it's like utron","too big and bloated for average project","well I wouldn't use it for anything big and performant for sure","O_o","and for big project - it is too limiting and you have to fight it","but if I want to build a webapp with admin part and not to write code","How about rails ?","wow, looks like I came at a good time.","_jd: yeah admin is the only good part in django","leftpad: isnt there always discussions here ?","but even then i'd prefer to take Flask + Flask-admin","actually this is a bad time...","we are not talking about go",":D","it's freelancer whining hour","karlis: rails is ok, not a first choise but not the last :)","Osleg: I thought that django == rails...","No its not","_jd: rails much more flexible","not as flexible as go net/http :)","django is.... I call it tank, and usually django lovers use this tank to ride 1 meter","in the right direction or the wrong one?","there is no right direction in django :D","it did a job for me so meh","only the path of least resistance?","@hyphenated lol","is there something like filepath.Abs(string) but which takes the path relative to a GIVEN directory, not to the current directory (I don't want to merely concatenate the two as the specified path may be absolute)","karlis If you do frontend work, I'd like to have some reference sites.","Like u want to see my portfolio ?","karlis Aye","https://docs.google.com/spreadsheets/d/1MlCb7lK...","Most of the design are mine","Also, i am a angularjs junkie :D","alexbligh1, if you concat with an absolute path, it will take the second path","whats .lv?","smw, even under Windows?","alexbligh1, try it","smw, don't have windows, but the source to filepath.Abs suggests not.","alexbligh1, oh, I was thinking of Join()","And I think \"C:\\foo\\bar\\D:\\foo\\bar\" doesn't work","smw, hmm","alexbligh1, nm, doesn't appear to work how I thought",".lv is domain names in latvia","lv = latvia","alexbligh1, in that case, if IsAbs x else Join(\"prefix\", x)","smw, yeah, I was worried about things like \"\\foo\\bar\" which is not absolute (no drive letter) but can't be 'joined' to \"\\a\\b\"","alexbligh1, test it out","smw, no windows (still) :-) I'm trying to write something portable without the 'benefit' of operating systems like Windows","alexbligh1, IsAbs should work on windows as well","although it may only work when running on windows","smw, I think I may have to find a better way around this one. thanks anyway.","alexbligh1, did you test IsAbs on windows?","smw, no, I have no windows.","Why would some1 use windows ?","karlis, because they need to test on it?","because real life isnt an OS war","Ohh.. okey :D","alexbligh1, you should probably get a windows machine to test on. Perhaps a cloud one if you have nothing else.","alexbligh1: microsoft has testing images you can run in a vm if you want","https://developer.microsoft.com/en-us/microsoft...","edrocks, wow, that is amazingly useful","yeah thanks for the share","smw: I think they upped their game recently. The image downloader wasn't as nice before","they also have a standalone app to test ie and edge remotly. If you don't want a full vm. but the virtual machines are more useful for testing go","yeah, the fact they are also adding support for bash and whatnot makes me interested in looking at microsoft products again.","it will make life a lot easier for people who work in windows shops","windows 10 is nice but horribly unstable. I have a new imac coming tomorrow because of issues with windows","yep","depends on your hardware though. ie my laptop works perfectly with windows 10","edrocks, add in hololens and microsoft looks like it may have a future in my life. Which I would have said was impossible 1.5 years ago","its going to be a fight between hololens and Vive","vive is amazing","I have not heard of vive","it's Valves VR","run away, run away!","we have some dev units, mega cool","sedition, ah, got it. Um... I want AR. I don't really care about VR","right answer :)","yeah im excited to see which one wins","VR is isolating; AR is integrating","why not both? They are completely different in my view","I hope for the best, but fear for the worst","Of course, for me, I just want AR to make it look like I am looking at a 50in screen when I am on an airplane.","err, VR","For AR, I want it in daily life.","those gear adverts are incredibly sinister","don't know if you've seen them, they're the ones tracking samsung through modern history and it ends with some stubbled guy becoming a shut-in","vive looks cool and I am waiting for desktop and tv modes for when I am on a plane or something. But I want hololens AR for everything!.","lupine, I have not seen them.","properly creepy","edrocks, sedition: I sort of always ignored microsoft because I couldn't use my tools and the scripting sucked. Now that this has changed... it is going to be interesting :-)","for me, the thing thing to do with AR is to get an OsmAnd HUD for it","windows is just too complicated for devs...","no more satnav \\o/","smw: I have a ubuntu vm up 24/7 on windows","my go app and all databases run in the vm using docker","edrocks, ah, I have a windows VM I rarely spin up because I have someone else do it."]
